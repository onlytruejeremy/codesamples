getVendorPaginated(size, index, currentUser) {
    return new Promise(executor);
    function executor(resolve, reject) {
      let orders = null;
      let page = null;
      let totalCount = 0;

      const procName = "[dbo].[orders_select_vendor_detailed]";
      const returnParamMapper = null;
      dataProvider.executeCmd(
        procName,
        inputParamMapper,
        singleRecordMapper,
        returnParamMapper,
        onCompleted
      );
      function inputParamMapper(sqlParams) {
        sqlParams.input("PageSize", TYPES.Int, size);
        sqlParams.input("PageIndex", TYPES.Int, index);

        sqlParams.input("CreatedBy", TYPES.Int, currentUser);
      }

      function singleRecordMapper(data, set) {
        if (!orders) {
          orders = [];
        }
        totalCount = data.totalCount;
        delete data.totalCount;
        orders.push(data);
      }
      function onCompleted(err, data) {
        if (err) {
          reject(err);
          return;
        }
        if (orders) {
          page = new Paged(orders, index, size, totalCount);
          page.pagedItems.forEach(item => {
            item.orderItems = JSON.parse(item.orderItems);
            item.userAddress = JSON.parse(item.userAddress);
            item.userInfo = JSON.parse(item.userInfo);
          });
        }
        resolve(page);
      }
    }
  }
